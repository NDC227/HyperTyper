extends Node


# Declare member variables here. Examples:
var shelfIndex = Global.shelf
var shelfMax = 10
#var level = 0

# Called when the node enters the scene tree for the first time.
func _ready():
	$Shelves/AToCh.hide()
	$Shelves/ClToFa.hide()
	$Shelves/FrToHe.hide()
	$Shelves/HiToJun.hide()
	$Shelves/JunToL.hide()
	$Shelves/MToN.hide()
	$Shelves/OToR.hide()
	$Shelves/SToT.hide()
	$Shelves/ToToWal.hide()
	$Shelves/WarToZ.hide()
	$Shelves/AToCh.get_popup().connect("id_pressed", self, "_on_item_pressed")
	$Shelves/ClToFa.get_popup().connect("id_pressed", self, "_on_item_pressed")
	$Shelves/FrToHe.get_popup().connect("id_pressed", self, "_on_item_pressed")
	$Shelves/HiToJun.get_popup().connect("id_pressed", self, "_on_item_pressed")
	$Shelves/JunToL.get_popup().connect("id_pressed", self, "_on_item_pressed")
	$Shelves/MToN.get_popup().connect("id_pressed", self, "_on_item_pressed")
	$Shelves/OToR.get_popup().connect("id_pressed", self, "_on_item_pressed")
	$Shelves/SToT.get_popup().connect("id_pressed", self, "_on_item_pressed")
	$Shelves/ToToWal.get_popup().connect("id_pressed", self, "_on_item_pressed")
	$Shelves/WarToZ.get_popup().connect("id_pressed", self, "_on_item_pressed")
	getShelf()
	loadGame()
	saveGame()
	
func goToTest(text):
	Global.text = text
	get_tree().change_scene("res://TypingTest.tscn")
	saveGame()

func _on_item_pressed(ID):
	match(ID):
		0:
			goToTest("res://Texts/Test.txt")
		1:
			goToTest("res://Texts/Test.txt")
		2:
			goToTest("res://Texts/Test.txt")
		3:
			goToTest("res://Texts/Test.txt")
		4:
			goToTest("res://Texts/Test.txt")
		5:
			goToTest("res://Texts/Test.txt")
		6:
			goToTest("res://Texts/Test.txt")
		7:
			goToTest("res://Texts/Test.txt")
		8:
			goToTest("res://Texts/Test.txt")
		9:
			goToTest("res://Texts/Test.txt")
		10:
			goToTest("res://Texts/Test.txt")
		11:
			goToTest("res://Texts/Test.txt")
		12:
			goToTest("res://Texts/Clockwork.txt")
		13:
			goToTest("res://Texts/Test.txt")
		14:
			goToTest("res://Texts/Test.txt")
		15:
			goToTest("res://Texts/Test.txt")
		16:
			goToTest("res://Texts/Test.txt")
		17:
			goToTest("res://Texts/Test.txt")
		18:
			goToTest("res://Texts/Test.txt")
		19:
			goToTest("res://Texts/Test.txt")
		20:
			goToTest("res://Texts/Test.txt")
		21:
			goToTest("res://Texts/Test.txt")
		22:
			goToTest("res://Texts/Test.txt")
		23:
			goToTest("res://Texts/Test.txt")
		24:
			goToTest("res://Texts/Test.txt")
		25:
			goToTest("res://Texts/Test.txt")
		26:
			goToTest("res://Texts/Test.txt")
		27:
			goToTest("res://Texts/Test.txt")
		28:
			goToTest("res://Texts/Test.txt")
		29:
			goToTest("res://Texts/Test.txt")
		30:
			goToTest("res://Texts/Test.txt")
		31:
			goToTest("res://Texts/Test.txt")
		32:
			goToTest("res://Texts/Test.txt")
		33:
			goToTest("res://Texts/Test.txt")
		34:
			goToTest("res://Texts/Test.txt")
		35:
			goToTest("res://Texts/Test.txt")
		36:
			goToTest("res://Texts/Test.txt")
		37:
			goToTest("res://Texts/Test.txt")
		38:
			goToTest("res://Texts/Test.txt")
		39:
			goToTest("res://Texts/Test.txt")
		40:
			goToTest("res://Texts/Test.txt")
		41:
			goToTest("res://Texts/Test.txt")
		42:
			goToTest("res://Texts/Test.txt")
		43:
			goToTest("res://Texts/Test.txt")
		44:
			goToTest("res://Texts/Test.txt")
		45:
			goToTest("res://Texts/Test.txt")
		46:
			goToTest("res://Texts/Test.txt")
		47:
			goToTest("res://Texts/Test.txt")
		48:
			goToTest("res://Texts/Test.txt")
		49:
			goToTest("res://Texts/Test.txt")
		50:
			goToTest("res://Texts/Test.txt")
		51:
			goToTest("res://Texts/Test.txt")
		52:
			goToTest("res://Texts/Test.txt")
		53:
			goToTest("res://Texts/Test.txt")
		54:
			goToTest("res://Texts/Test.txt")
		55:
			goToTest("res://Texts/Test.txt")
		56:
			goToTest("res://Texts/Test.txt")
		57:
			goToTest("res://Texts/Test.txt")
		58:
			goToTest("res://Texts/Test.txt")
		59:
			goToTest("res://Texts/Test.txt")
		60:
			goToTest("res://Texts/Test.txt")
		61:
			goToTest("res://Texts/Test.txt")
		62:
			goToTest("res://Texts/Test.txt")
		63:
			goToTest("res://Texts/Test.txt")
		64:
			goToTest("res://Texts/Test.txt")
		65:
			goToTest("res://Texts/Test.txt")
		66:
			goToTest("res://Texts/Test.txt")
		67:
			goToTest("res://Texts/Test.txt")
		68:
			goToTest("res://Texts/Test.txt")
		69:
			goToTest("res://Texts/Test.txt")
		70:
			goToTest("res://Texts/Test.txt")
		71:
			goToTest("res://Texts/Test.txt")
		72:
			goToTest("res://Texts/Test.txt")
		73:
			goToTest("res://Texts/Test.txt")
		74:
			goToTest("res://Texts/Test.txt")
		75:
			goToTest("res://Texts/Test.txt")
		76:
			goToTest("res://Texts/Test.txt")
		77:
			goToTest("res://Texts/Test.txt")
		78:
			goToTest("res://Texts/Test.txt")
		79:
			goToTest("res://Texts/Test.txt")
		80:
			goToTest("res://Texts/Test.txt")
		81:
			goToTest("res://Texts/Test.txt")
		82:
			goToTest("res://Texts/Test.txt")
		83:
			goToTest("res://Texts/Test.txt")
		84:
			goToTest("res://Texts/Test.txt")
		85:
			goToTest("res://Texts/Test.txt")
		86:
			goToTest("res://Texts/Test.txt")
		87:
			goToTest("res://Texts/Test.txt")
		88:
			goToTest("res://Texts/Test.txt")
		89:
			goToTest("res://Texts/Test.txt")
		90:
			goToTest("res://Texts/Test.txt")
		91:
			goToTest("res://Texts/Test.txt")
		92:
			goToTest("res://Texts/WotW1.txt")
		93:
			goToTest("res://Texts/WotW2.txt")
		94:
			goToTest("res://Texts/Test.txt")
		95:
			goToTest("res://Texts/Test.txt")
		96:
			goToTest("res://Texts/Test.txt")
		97:
			goToTest("res://Texts/Test.txt")
		98:
			goToTest("res://Texts/Test.txt")
		99:
			goToTest("res://Texts/Test.txt")
		100:
			goToTest("res://Texts/Test.txt")
	Global.currentlevel = ID

func _on_Back_pressed():
	get_tree().change_scene("res://MainMenu.tscn")
	saveGame()

func _on_Left_pressed():
	shelfIndex -= 1
	getShelf()

func _on_Right_pressed():
	shelfIndex += 1
	getShelf()
		
func getShelf():
	if shelfIndex < 1:
		shelfIndex = shelfMax
	if shelfIndex > shelfMax:
		shelfIndex = 1
	Global.shelf = shelfIndex
	match(shelfIndex):
		1:
			$Shelves/WarToZ.hide()
			$Shelves/ClToFa.hide()
			$Shelves/AToCh.show()
		2:
			$Shelves/AToCh.hide()
			$Shelves/FrToHe.hide()
			$Shelves/ClToFa.show()
		3:
			$Shelves/ClToFa.hide()
			$Shelves/HiToJun.hide()
			$Shelves/FrToHe.show()
		4:
			$Shelves/FrToHe.hide()
			$Shelves/JunToL.hide()
			$Shelves/HiToJun.show()
		5:
			$Shelves/HiToJun.hide()
			$Shelves/MToN.hide()
			$Shelves/JunToL.show()
		6:
			$Shelves/JunToL.hide()
			$Shelves/OToR.hide()
			$Shelves/MToN.show()
		7:
			$Shelves/MToN.hide()
			$Shelves/SToT.hide()
			$Shelves/OToR.show()
		8:
			$Shelves/OToR.hide()
			$Shelves/ToToWal.hide()
			$Shelves/SToT.show()
		9:
			$Shelves/SToT.hide()
			$Shelves/WarToZ.hide()
			$Shelves/ToToWal.show()
		10:
			$Shelves/ToToWal.hide()
			$Shelves/AToCh.hide()
			$Shelves/WarToZ.show()

func saveGame():
	var save_game = File.new()
	save_game.open("user://savegame.save", File.WRITE)
	var save_nodes = get_tree().get_nodes_in_group("save")
	for node in save_nodes:
		# Check the node is an instanced scene so it can be instanced again during load.
		if node.filename.empty():
			print("persistent node '%s' is not an instanced scene, skipped" % node.name)
			continue

		# Check the node has a save function.
		if !node.has_method("save"):
			print("persistent node '%s' is missing a save() function, skipped" % node.name)
			continue

		# Call the node's save function.
		var node_data = node.call("save")

		# Store the save dictionary as a new line in the save file.
		save_game.store_line(to_json(node_data))
	save_game.close()

func loadGame():
	if Global.level == null:
		var save_game = File.new()
		var save_nodes = get_tree().get_nodes_in_group("Save")
		#for i in save_nodes:  #Do I need this?
		#	i.queue_free()

		# Load the file line by line and process that dictionary to restore
		# the object it represents.
		save_game.open("user://savegame.save", File.READ)
		var node_data = parse_json(save_game.get_line())
		Global.level = str(node_data["level"])
		save_game.close()
	updateDisabled()
	$Control/Level.text = "Level: " + str(Global.level)

func save():
	var save_dict = {
		"level" : Global.level
	}
	return save_dict

func updateDisabled():
	Global.level = int(Global.level)
	for i in range (0, (11 if Global.level > 11 else Global.level)):
		$Shelves/AToCh.get_popup().set_item_disabled(i, false)
	for i in range (0, (9 if Global.level > 20 else Global.level - 11)):
		$Shelves/ClToFa.get_popup().set_item_disabled(i, false)
	for i in range (0, (10 if Global.level > 30 else Global.level - 20)):
		$Shelves/FrToHe.get_popup().set_item_disabled(i, false)
	for i in range (0, (10 if Global.level > 40 else Global.level - 30)):
		$Shelves/HiToJun.get_popup().set_item_disabled(i, false)
	for i in range (0, (10 if Global.level > 50 else Global.level - 40)):
		$Shelves/JunToL.get_popup().set_item_disabled(i, false)
	for i in range (0, (10 if Global.level > 60 else Global.level - 50)):
		$Shelves/MToN.get_popup().set_item_disabled(i, false)
	for i in range (0, (10 if Global.level > 70 else Global.level - 60)):
		$Shelves/OToR.get_popup().set_item_disabled(i, false)
	for i in range (0, (11 if Global.level > 81 else Global.level - 70)):
		$Shelves/SToT.get_popup().set_item_disabled(i, false)
	for i in range (0, (10 if Global.level > 90 else Global.level - 81)):
		$Shelves/ToToWal.get_popup().set_item_disabled(i, false)
	for i in range (0, (9 if Global.level > 100 else Global.level - 91)):
		$Shelves/WarToZ.get_popup().set_item_disabled(i, false)

func _on_Up_pressed():
	Global.level = int(Global.level) + 1
	$Control/Level.text = "Level: " + str(Global.level)

func _on_Down_pressed():
	Global.level = int(Global.level) - 1
	$Control/Level.text = "Level: " + str(Global.level)
